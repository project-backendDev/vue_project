<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper 
   PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="com.project.user.UserInfoMapper">
	<resultMap type="com.project.user.UserInfo" id="UserInfo">
		<result property="userSeq"			column="USER_SEQ" />
		<result property="userId"			column="USER_ID" />
		<result property="userPw"			column="USER_PW" />
		<result property="name"				column="NAME" />
		<result property="tel"				column="TEL" />
		<result property="birthday"			column="BIRTHDAY" />
		<result property="gender"			column="GENDER" />
		<result property="postcode"			column="POSTCODE" />
		<result property="addr1"			column="ADDR1" />
		<result property="addr2"			column="ADDR2" />
		<result property="regDate"			column="REG_DATE" />
		<result property="editDate"			column="EDIT_DATE" />
		<result property="lastLogin"		column="LAST_LOGIN" />
		<result property="userType"			column="USER_TYPE" />
		<result property="loginType"		column="LOGIN_TYPE" />
		<result property="addItem01"		column="ADD_ITEM01" />
		<result property="addItem02"		column="ADD_ITEM02" />
		<result property="addItem03"		column="ADD_ITEM03" />
	</resultMap>
	
	<!-- 회원가입 (INSERT) -->
	<insert id="insertUser" parameterType="com.project.user.UserInfo"
		useGeneratedKeys="true" keyProperty="userSeq">
		INSERT INTO USER_INFO (
			USER_ID, USER_PW, NAME, TEL, BIRTHDAY, GENDER, POSTCODE, ADDR1, ADDR2,
			REG_DATE, EDIT_DATE, LAST_LOGIN, USER_TYPE, LOGIN_TYPE, ADD_ITEM01, ADD_ITEM02, ADD_ITEM03
		) VALUES (
			#{userId}, #{userPw}, #{name}, #{tel}, #{birthday}, #{gender}, #{postcode}, #{addr1}, #{addr2}, 
			now(), now(), now(), #{userType}, #{loginType}, #{addItem01}, #{addItem02}, #{addItem03}
		)
	</insert>

	<!-- 회원조회 (SELECT) -->
	<select id="getAllUserList"  parameterType="com.project.user.UserInfo" resultMap="UserInfo">
		SELECT	  USER_ID
				, USER_PW
				, NAME
				, TEL
				, BIRTHDAY
				, GENDER
				, POSTCODE
				, ADDR1
				, ADDR2
				, REG_DATE
				, EDIT_DATE
				, LAST_LOGIN
				, USER_TYPE
				, LOGIN_TYPE
				, ADD_ITEM01
				, ADD_ITEM02
				, ADD_ITEM03
		FROM	USER_INFO
	</select>
	
	<!-- 단일 회원 조회 (SELECT) -->
	<select id="getUserListByUserId" parameterType="com.project.user.UserInfo" resultMap="UserInfo">
		SELECT	  USER_ID
				, USER_PW
				, NAME
				, TEL
				, BIRTHDAY
				, GENDER
				, POSTCODE
				, ADDR1
				, ADDR2
				, REG_DATE
				, EDIT_DATE
				, LAST_LOGIN
				, USER_TYPE
				, LOGIN_TYPE
				, ADD_ITEM01
				, ADD_ITEM02
				, ADD_ITEM03
		FROM	USER_INFO
		WHERE	USER_ID = #{userId}	
	</select>
	
	<!-- 사이트에서 회원가입 시 중복회원가입 방지를 위해 아이디 중복검사 수행 -->
	<select id="duplicationUserId" parameterType="com.project.user.UserInfo" resultType="int">
		SELECT	count(USER_ID)
		FROM	USER_INFO
		WHERE	USER_ID = #{userId}
	</select>	
	
	<!-- 로그인 시 아이디와 비밀번호가 일치하는 회원을 조회 -->
	<select	id="loginUserInfo" resultMap="UserInfo" resultType="String">
		SELECT	*
		FROM	USER_INFO
		WHERE	USER_ID = #{userId}
		AND		USER_PW = #{userPw}
	</select>
	
	<!-- 로그인 시 마지막 로그인 날짜 업데이트 -->
	<update id="lastLoginUpdate" parameterType="com.project.user.UserInfo">
		UPDATE	USER_INFO
		SET		LAST_LOGIN = #{lastLogin}
		WHERE	USER_ID = #{userId}
	</update>
	
</mapper>